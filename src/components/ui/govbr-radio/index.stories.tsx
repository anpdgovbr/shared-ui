import Box from '@mui/material/Box'
import Stack from '@mui/material/Stack'
import Typography from '@mui/material/Typography'
import type { Meta, StoryObj } from '@storybook/react'
import { GovBRThemeProvider } from '@theme/GovBRThemeProvider'
import React from 'react'

import { GovBRRadio } from './index'

const meta: Meta<typeof GovBRRadio> = {
  title: 'Components/GovBRRadio',
  component: GovBRRadio,
  tags: ['autodocs'],
  decorators: [
    (Story) => (
      <GovBRThemeProvider>
        <Box sx={{ padding: 3, maxWidth: '600px' }}>
          <Story />
        </Box>
      </GovBRThemeProvider>
    ),
  ],
  argTypes: {
    name: {
      control: 'text',
      description: 'Nome √∫nico do grupo de radio buttons para agrupamento l√≥gico',
    },
    value: {
      control: 'text',
      description: 'Valor √∫nico que identifica esta op√ß√£o dentro do grupo',
    },
    label: {
      control: 'text',
      description: 'Texto do r√≥tulo exibido ao lado do bot√£o de r√°dio',
    },
    helpText: {
      control: 'text',
      description: 'Texto explicativo adicional exibido abaixo do r√≥tulo',
    },
    text: {
      control: 'text',
      description: 'Texto exibido na op√ß√£o de sele√ß√£o (alternativa ao label)',
    },
    checked: {
      control: 'boolean',
      description: 'Define se esta op√ß√£o est√° selecionada no grupo',
    },
    disabled: {
      control: 'boolean',
      description: 'Desabilita o radio button impedindo sele√ß√£o pelo usu√°rio',
    },
    error: {
      control: 'boolean',
      description: 'Estado de erro que aplica estiliza√ß√£o visual de valida√ß√£o falhou',
    },
    color: {
      control: 'select',
      options: ['primary', 'secondary', 'success', 'warning', 'info', 'error'],
      description: 'Cor sem√¢ntica do radio button conforme padr√µes GovBR-DS',
    },
    size: {
      control: 'select',
      options: ['small', 'medium', 'large'],
      description: 'Tamanho do radio button: small (16px), medium (20px), large (24px)',
    },
    strictgovbr: {
      control: 'boolean',
      description: 'Aplica estilos rigorosos do GovBR Design System (classes .br-radio)',
    },
  },
  parameters: {
    docs: {
      description: {
        component: `
## GovBRRadio - Componente GovBR-DS

Componente de bot√£o de r√°dio que segue as diretrizes visuais do GovBR Design System para sele√ß√£o √∫nica.

### Caracter√≠sticas Principais:
- üéØ **Sele√ß√£o √önica**: Permite apenas uma sele√ß√£o por grupo de op√ß√µes
- üé® **Cores Sem√¢nticas**: Utiliza paleta oficial do GovBR-DS
- üîç **Acessibilidade**: Labels associados, navega√ß√£o por teclado e WAI-ARIA
- üìè **Tamanhos Responsivos**: Small, Medium, Large para diferentes contextos
- üí¨ **Texto de Ajuda**: Suporte a helpText para explica√ß√µes adicionais
- üèõÔ∏è **GovBR Strict Mode**: Aplica√ß√£o rigorosa dos padr√µes governamentais
- ‚ö° **Performance**: Renderiza√ß√£o otimizada com eventos nativos
- üåê **Agrupamento**: Sistema de name para agrupamento l√≥gico de op√ß√µes

### Exemplo de Uso:
\`\`\`typescript
// Grupo de op√ß√µes mutuamente exclusivas
const [selectedValue, setSelectedValue] = useState('opcao1')

<GovBRRadio
  name="preferencia"
  value="opcao1"
  label="Primeira Op√ß√£o"
  helpText="Descri√ß√£o da primeira op√ß√£o"
  checked={selectedValue === 'opcao1'}
  onChange={(e) => setSelectedValue(e.target.value)}
/>
<GovBRRadio
  name="preferencia"
  value="opcao2"
  label="Segunda Op√ß√£o"
  checked={selectedValue === 'opcao2'}
  onChange={(e) => setSelectedValue(e.target.value)}
/>
\`\`\`
        `,
      },
    },
  },
}

export default meta
type Story = StoryObj<typeof GovBRRadio>

export const Default: Story = {
  args: {
    name: 'genero',
    value: 'masculino',
    label: 'Masculino',
    helpText: 'Selecione sua identidade de g√™nero',
  },
  parameters: {
    docs: {
      description: {
        story: 'Exemplo b√°sico de radio button com r√≥tulo e texto de ajuda.',
      },
    },
  },
}

export const InteractiveExample: Story = {
  render: () => {
    const [selectedValue, setSelectedValue] = React.useState('online')

    const handleChange = (value: string) => {
      setSelectedValue(value)
    }

    const mockSubmit = () => {
      console.log('Prefer√™ncia selecionada:', selectedValue)
      alert(`Voc√™ selecionou: ${selectedValue}`)
    }

    return (
      <Stack spacing={2}>
        <Typography variant="h6" component="h3">
          Como voc√™ prefere ser contatado pela ANPD?
        </Typography>

        <Stack spacing={2} sx={{ ml: 1 }}>
          <GovBRRadio
            name="contato"
            value="online"
            label="Portal Online"
            helpText="Receber notifica√ß√µes atrav√©s do portal web da ANPD"
            checked={selectedValue === 'online'}
            onClick={() => handleChange('online')}
          />
          <GovBRRadio
            name="contato"
            value="email"
            label="E-mail Institucional"
            helpText="Receber comunicados por e-mail do √≥rg√£o"
            checked={selectedValue === 'email'}
            onClick={() => handleChange('email')}
          />
          <GovBRRadio
            name="contato"
            value="telefone"
            label="Liga√ß√£o Telef√¥nica"
            helpText="Contato direto via telefone nos hor√°rios comerciais"
            checked={selectedValue === 'telefone'}
            onClick={() => handleChange('telefone')}
          />
          <GovBRRadio
            name="contato"
            value="presencial"
            label="Atendimento Presencial"
            helpText="Agendamento para atendimento nas unidades da ANPD"
            checked={selectedValue === 'presencial'}
            onClick={() => handleChange('presencial')}
            disabled
          />
        </Stack>

        <Box sx={{ mt: 3 }}>
          <button
            type="button"
            onClick={mockSubmit}
            style={{
              padding: '12px 24px',
              backgroundColor: '#1976d2',
              color: 'white',
              border: 'none',
              borderRadius: '4px',
              cursor: 'pointer',
              fontSize: '16px',
            }}
          >
            Confirmar Prefer√™ncia
          </button>
        </Box>
      </Stack>
    )
  },
  parameters: {
    docs: {
      description: {
        story:
          'Exemplo de grupo de radio buttons com controle de estado e simula√ß√£o de uso real no contexto ANPD.',
      },
    },
  },
}

export const Checked: Story = {
  args: {
    name: 'gender',
    value: 'female',
    label: 'Feminino',
    checked: true,
  },
}

export const Disabled: Story = {
  args: {
    name: 'option',
    value: 'disabled',
    label: 'Op√ß√£o desabilitada',
    disabled: true,
  },
}

export const DisabledChecked: Story = {
  args: {
    name: 'option',
    value: 'disabled-checked',
    label: 'Op√ß√£o desabilitada e selecionada',
    disabled: true,
    checked: true,
  },
}

export const GroupSelection: Story = {
  render: () => (
    <Stack spacing={3}>
      <Typography variant="h6" gutterBottom>
        Selecione o tipo de usu√°rio:
      </Typography>
      <Stack spacing={1} sx={{ ml: 1 }}>
        <GovBRRadio
          name="tipoUsuario"
          value="cidadao"
          label="Cidad√£o"
          helpText="Pessoa f√≠sica interessada em prote√ß√£o de dados"
        />
        <GovBRRadio
          name="tipoUsuario"
          value="empresa"
          label="Empresa Privada"
          helpText="Organiza√ß√£o do setor privado"
        />
        <GovBRRadio
          name="tipoUsuario"
          value="orgaoPublico"
          label="√ìrg√£o P√∫blico"
          helpText="Institui√ß√£o do poder p√∫blico"
        />
        <GovBRRadio
          name="tipoUsuario"
          value="terceirosetor"
          label="Terceiro Setor"
          helpText="ONGs, associa√ß√µes e organiza√ß√µes sem fins lucrativos"
        />
      </Stack>
    </Stack>
  ),
  parameters: {
    docs: {
      description: {
        story: 'Exemplo de grupo est√°tico de radio buttons com m√∫ltiplas op√ß√µes.',
      },
    },
  },
}
