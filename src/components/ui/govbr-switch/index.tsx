'use client'

import FormControlLabel from '@mui/material/FormControlLabel'
import Switch from '@mui/material/Switch'
import classNames from 'classnames'

import type { GovBRSwitchProps } from './types'

/**
 * GovBRSwitch - Componente de Switch (Toggle) padronizado GovBR-DS
 *
 * Implementa o Design System GovBR de duas formas:
 * 1. **Modo PadrÃ£o (default):** Renderiza Switch do Material-UI estilizado via govbrTheme
 * 2. **Modo Estrito (`strictgovbr`):** Renderiza HTML puro com classes CSS do @govbr-ds/core
 *
 * CaracterÃ­sticas:
 * - ðŸŽ¨ Visual consistente com GovBR Design System
 * - ðŸ”„ Dois modos de operaÃ§Ã£o (MUI + tema | HTML puro)
 * - â™¿ AcessÃ­vel com labels apropriados e navegaÃ§Ã£o por teclado
 * - ðŸŽ­ Estados visuais: hover, focus, checked, disabled
 * - ðŸ”§ FlexÃ­vel com suporte a customizaÃ§Ã£o via props
 * - âš¡ Type-safe com TypeScript e union types
 * - ðŸ“± Responsivo e adaptÃ¡vel a diferentes contextos
 */
export function GovBRSwitch(props: Readonly<GovBRSwitchProps>) {
  // --- MODO ESTRITO ---
  if (props.strictgovbr) {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    const { id, label, className, strictgovbr: _unused, ...htmlProps } = props

    return (
      <div className={classNames('br-switch', className)}>
        <input id={id} type="checkbox" {...htmlProps} />
        <label htmlFor={id}>{label}</label>
      </div>
    )
  }

  // --- MODO PADRÃƒO (MUI) ---
  const { switchProps, ...formControlLabelProps } = props

  return <FormControlLabel control={<Switch {...switchProps} />} {...formControlLabelProps} />
}

// Export types para consumidores da biblioteca
export type { GovBRSwitchProps } from './types'
